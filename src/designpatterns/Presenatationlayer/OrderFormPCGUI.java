/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package designpatterns.Presenatationlayer;

import designpatterns.Logiclayer.Concretes.BluetoothDecorator;
import designpatterns.Logiclayer.Concretes.DriveDecorator;
import designpatterns.Logiclayer.Concretes.WebcamDecorator;
import designpatterns.Logiclayer.Concretes.ComputerBuilder;
import designpatterns.Logiclayer.Concretes.sendPcOrderCommand;
import designpatterns.Logiclayer.Interfaces.IComputer;
import designpatterns.Logiclayer.OrderManager;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Lorenzo
 */
public class OrderFormPCGUI extends javax.swing.JFrame {

       
DefaultListModel memoryListModel = new DefaultListModel();
DefaultListModel screenListModel = new DefaultListModel();
DefaultListModel videoListModel = new DefaultListModel();

OrderManager ordermanager = new OrderManager();
ComputerBuilder compBuilder;

MainGUI MainGUI;
Boolean Extradrive=false;
String driveString="";
Boolean Extrawebcam=false;
String webcamString="";
Boolean Extrabluetooth=false;
String bluetoothString="";



    /**
     * Creates new form OrderFormPCGUI
     */       
    public OrderFormPCGUI(MainGUI CurrentGUI) {
        initComponents();
        this.setTitle("PC order GUI");
        osComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Windows XP", "Windows 7", "Windows 8", "Mac OSX", "Ubuntu" }));
        processorComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AMD", "Intel" }));
        ramComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2GB", "4GB", "6GB", "8GB", "12GB", "16GB" }));
        memoryComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "128GB", "256GB", "512GB","768GB" ,"1TB", "2TB" }));
        screensizeComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7 inch", "11 inch", "13 inch","15 inch" ,"17 inch", "20 inch", "22 inch", "24 inch", "27 inch" }));
        screenresComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1024 x 768", "1280 x 1024", "1366 x 768","1600 x 900" ,"1680 x 1050", "1920 x 1080", "2560 x 1440" }));
        videoComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AMD", "nVidia", "Intel" }));
        audioComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Realtek Audio", "Dolby Sound System" }));
        brandComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geen", "Dell", "MSI","Lenovo" ,"Samsung", "Apple", "Alienware", "Acer", "ASUS", "Sony", "Toshiba", "HP" }));
        colorComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "White", "Grey", "Black","Red" ,"Green", "Yellow", "Blue" }));
        driveComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CD-Drive", "CD & DVD-Drive", "Bluray + CD/DVD" }));
        driveComboboxPC.setEnabled(false);
        webcamComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SD", "720P", "1080P" }));
        webcamComboboxPC.setEnabled(false);
        usbComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0","1", "2", "3", "4", "5", "6", "7", "8"}));
        hdmiComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0","1", "2", "3", "4", "5", "6", "7", "8"}));
        vgaComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0","1", "2", "3", "4", "5", "6", "7", "8"}));
        dviComboboxPC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0","1", "2", "3", "4", "5", "6", "7", "8"}));
        
       
        MainGUI=CurrentGUI;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        invoerButtonPC = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        osComboboxPC = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        processorComboboxPC = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        ramComboboxPC = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        memoryComboboxPC = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        screensizeComboboxPC = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        screenresComboboxPC = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        videoComboboxPC = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        audioComboboxPC = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        brandComboboxPC = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        colorComboboxPC = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        driveCheckbox = new javax.swing.JCheckBox();
        driveComboboxPC = new javax.swing.JComboBox();
        webcamCheckbox = new javax.swing.JCheckBox();
        webcamComboboxPC = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        usbComboboxPC = new javax.swing.JComboBox();
        bluetoothCheckbox = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        hdmiComboboxPC = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        vgaComboboxPC = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        dviComboboxPC = new javax.swing.JComboBox();
        addButtonVideo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        videoList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        screenList = new javax.swing.JList();
        addButtonScreens = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        memoryList = new javax.swing.JList();
        addButtonMemory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Terug");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        invoerButtonPC.setText("Invoeren");
        invoerButtonPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerButtonPCActionPerformed(evt);
            }
        });

        jLabel1.setText("OS:");

        osComboboxPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                osComboboxPCActionPerformed(evt);
            }
        });

        jLabel2.setText("Processor:");

        processorComboboxPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processorComboboxPCActionPerformed(evt);
            }
        });

        jLabel3.setText("RAM:");

        jLabel4.setText("Memory:");

        memoryComboboxPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryComboboxPCActionPerformed(evt);
            }
        });

        jLabel5.setText("Screensize:");

        jLabel6.setText("Screenres:");

        jLabel7.setText("Video:");

        videoComboboxPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoComboboxPCActionPerformed(evt);
            }
        });

        jLabel8.setText("Audio:");

        jLabel9.setText("Brand:");

        jLabel10.setText("Color:");

        colorComboboxPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorComboboxPCActionPerformed(evt);
            }
        });

        jLabel11.setText("Extras:");

        driveCheckbox.setText("Drive");
        driveCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driveCheckboxActionPerformed(evt);
            }
        });

        webcamCheckbox.setText("Webcam");
        webcamCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webcamCheckboxActionPerformed(evt);
            }
        });

        jLabel12.setText("Ports:");

        jLabel13.setText("USB Ports:");

        bluetoothCheckbox.setText("Bluetooth");
        bluetoothCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bluetoothCheckboxActionPerformed(evt);
            }
        });

        jLabel14.setText("HDMI Ports:");

        jLabel15.setText("VGA Ports:");

        jLabel16.setText("DVI Ports:");

        addButtonVideo.setText("Toevoegen");
        addButtonVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonVideoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(videoList);

        jScrollPane2.setViewportView(screenList);

        addButtonScreens.setText("Toevoegen");
        addButtonScreens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonScreensActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(memoryList);

        addButtonMemory.setText("Toevoegen");
        addButtonMemory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonMemoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(vgaComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(usbComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(dviComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hdmiComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(invoerButtonPC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(osComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(processorComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(colorComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(driveCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(driveComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bluetoothCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(webcamCheckbox, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(webcamComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(audioComboboxPC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(videoComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButtonVideo))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(screensizeComboboxPC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(screenresComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButtonScreens))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ramComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(memoryComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButtonMemory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(brandComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(invoerButtonPC))
                    .addComponent(osComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(processorComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(ramComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(memoryComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButtonMemory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(screensizeComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addButtonScreens)
                        .addComponent(screenresComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(videoComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButtonVideo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(audioComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brandComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(colorComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(driveCheckbox)
                    .addComponent(driveComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webcamCheckbox)
                    .addComponent(webcamComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bluetoothCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(usbComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(hdmiComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(vgaComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dviComboboxPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        MainGUI.setVisibility(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void invoerButtonPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerButtonPCActionPerformed
        
        String memory = "Geheugen: ";
        for (int i = 0; i < memoryList.getModel().getSize(); i++) {
            Object item = memoryList.getModel().getElementAt(i);
            memory += item+" ";
        }
        
        
        String os = "OS: ";
        os += (String)osComboboxPC.getSelectedItem();
        String processor = "Processor: ";
        processor += (String)processorComboboxPC.getSelectedItem();
        String ram = "Ram: ";
        ram += (String)ramComboboxPC.getSelectedItem();
        String audio = "Audio: ";
        audio += (String)audioComboboxPC.getSelectedItem();
        String brand = "Brand: ";
        brand += (String)brandComboboxPC.getSelectedItem();
        String color = "Color: ";
        color += (String)colorComboboxPC.getSelectedItem();
        String drive = "";
        if(driveCheckbox.isSelected()){
            drive = "Drive: ";
            drive += (String)driveComboboxPC.getSelectedItem();
            Extradrive=true;
            driveString=(String)driveComboboxPC.getSelectedItem();
        }
        String webcam = "Webcam: None";
        if(webcamCheckbox.isSelected()){
            webcam = "Webcam: ";
            webcam += (String)webcamComboboxPC.getSelectedItem();
            Extrawebcam=true;
            webcamString=(String)webcamComboboxPC.getSelectedItem();
        }
        String bluetooth = "Bluetooth Adapter: No";
        if(bluetoothCheckbox.isSelected()){
            bluetooth = "Bluetooth Adapter: Yes";
            Extrabluetooth=true;
            bluetoothString="Yes";
        }
        String usb = "USB poorten: ";
        usb += (String)usbComboboxPC.getSelectedItem();
        String vga = "VGA poorten: ";
        vga += (String)vgaComboboxPC.getSelectedItem();
        String hdmi = "HDMI poorten: ";
        hdmi += (String)hdmiComboboxPC.getSelectedItem();
        String dvi = "DVI poorten: ";
        dvi += (String)dviComboboxPC.getSelectedItem();
        
        String orderRegel = os +" - " + processor + " - " + ram + " - "+ memory + " - " + audio + " - " + brand + " - " + color + " - " + drive + " - " + webcam + " - " + bluetooth + " - " + usb + " - " + vga + " - " + hdmi + " - " + dvi;
        ordermanager.setOrder(orderRegel);
        
        ArrayList orderArray= new ArrayList<String>();
        
        orderArray.add(os);
        orderArray.add(ram);
        orderArray.add(processor);
       
        sendPcOrderCommand command=new sendPcOrderCommand(orderArray);
        
        IComputer comp = command.execute();
        compBuilder=command.getCompBuilder();       
        
        checkExtras(comp);
       
        comp.displaySpecs();
        comp.displayExtras();
        
        MainGUI.setVisibility(true);
        MainGUI.update();
        this.setVisible(false);
    }//GEN-LAST:event_invoerButtonPCActionPerformed

    private void osComboboxPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_osComboboxPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_osComboboxPCActionPerformed

    private void processorComboboxPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processorComboboxPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_processorComboboxPCActionPerformed

    private void memoryComboboxPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryComboboxPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memoryComboboxPCActionPerformed

    private void videoComboboxPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoComboboxPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_videoComboboxPCActionPerformed

    private void colorComboboxPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorComboboxPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colorComboboxPCActionPerformed

    private void driveCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driveCheckboxActionPerformed
        if(driveCheckbox.isSelected()){  
        driveComboboxPC.setEnabled(true);
      }else{
        driveComboboxPC.setEnabled(false);
      }
    }//GEN-LAST:event_driveCheckboxActionPerformed

    private void webcamCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webcamCheckboxActionPerformed
      if(webcamCheckbox.isSelected()){  
        webcamComboboxPC.setEnabled(true);
      }else{
        webcamComboboxPC.setEnabled(false);
      }
    }//GEN-LAST:event_webcamCheckboxActionPerformed

    private void bluetoothCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bluetoothCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bluetoothCheckboxActionPerformed

    private void addButtonMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonMemoryActionPerformed
        String memorySelect = (String)memoryComboboxPC.getSelectedItem();
        memoryListModel.addElement(memorySelect + " Geheugen");
        memoryList.setModel(memoryListModel);       
    }//GEN-LAST:event_addButtonMemoryActionPerformed

    private void addButtonScreensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonScreensActionPerformed
        String screenSizeSelect = (String)screensizeComboboxPC.getSelectedItem();
        String screenResSelect = (String)screenresComboboxPC.getSelectedItem();
        screenListModel.addElement(screenSizeSelect +" - "+ screenResSelect + " Monitor");
        screenList.setModel(screenListModel);  
    }//GEN-LAST:event_addButtonScreensActionPerformed

    private void addButtonVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonVideoActionPerformed
        String videoSelect = (String)videoComboboxPC.getSelectedItem();
        videoListModel.addElement(videoSelect + " Videokaart");
        videoList.setModel(videoListModel);
    }//GEN-LAST:event_addButtonVideoActionPerformed
    
    public IComputer checkExtras(IComputer comp){
        
        IComputer decoComp = comp;
        
        if(Extradrive==true){
            DriveDecorator deco=new DriveDecorator();
            compBuilder.decorateComputer(deco,comp,driveString);
             
        }
        if(Extrawebcam==true){
            WebcamDecorator deco=new WebcamDecorator();
            compBuilder.decorateComputer(deco,comp,webcamString);
        }
        if(Extrabluetooth==true){
            BluetoothDecorator deco=new BluetoothDecorator();
            compBuilder.decorateComputer(deco,comp,bluetoothString);
        }
        
        return decoComp;
    }
     
     
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addButtonMemory;
    private javax.swing.JButton addButtonScreens;
    private javax.swing.JButton addButtonVideo;
    private javax.swing.JComboBox audioComboboxPC;
    private javax.swing.JCheckBox bluetoothCheckbox;
    private javax.swing.JComboBox brandComboboxPC;
    private javax.swing.JComboBox colorComboboxPC;
    private javax.swing.JCheckBox driveCheckbox;
    private javax.swing.JComboBox driveComboboxPC;
    private javax.swing.JComboBox dviComboboxPC;
    private javax.swing.JComboBox hdmiComboboxPC;
    private javax.swing.JButton invoerButtonPC;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JComboBox memoryComboboxPC;
    private javax.swing.JList memoryList;
    private javax.swing.JComboBox osComboboxPC;
    private javax.swing.JComboBox processorComboboxPC;
    private javax.swing.JComboBox ramComboboxPC;
    private javax.swing.JList screenList;
    private javax.swing.JComboBox screenresComboboxPC;
    private javax.swing.JComboBox screensizeComboboxPC;
    private javax.swing.JComboBox usbComboboxPC;
    private javax.swing.JComboBox vgaComboboxPC;
    private javax.swing.JComboBox videoComboboxPC;
    private javax.swing.JList videoList;
    private javax.swing.JCheckBox webcamCheckbox;
    private javax.swing.JComboBox webcamComboboxPC;
    // End of variables declaration//GEN-END:variables
}
